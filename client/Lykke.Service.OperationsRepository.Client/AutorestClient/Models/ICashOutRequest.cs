// Code generated by Microsoft (R) AutoRest Code Generator 1.1.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Lykke.Service.OperationsRepository.AutorestClient.Models
{
    using Lykke.Service;
    using Lykke.Service.OperationsRepository;
    using Lykke.Service.OperationsRepository.AutorestClient;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ICashOutRequest
    {
        /// <summary>
        /// Initializes a new instance of the ICashOutRequest class.
        /// </summary>
        public ICashOutRequest()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ICashOutRequest class.
        /// </summary>
        /// <param name="status">Possible values include: 'Pending',
        /// 'Confirmed', 'Declined', 'Processed', 'ClientConfirmation',
        /// 'CanceledByClient', 'CanceledByTimeout', 'RequestForDocs'</param>
        /// <param name="state">Possible values include: 'InProcessOnchain',
        /// 'SettledOnchain', 'InProcessOffchain', 'SettledOffchain',
        /// 'SettledNoChain'</param>
        /// <param name="tradeSystem">Possible values include: 'Spot',
        /// 'Margin'</param>
        public ICashOutRequest(string paymentSystem = default(string), string paymentFields = default(string), string blockchainHash = default(string), CashOutRequestStatus? status = default(CashOutRequestStatus?), TransactionStates? state = default(TransactionStates?), CashOutRequestTradeSystem? tradeSystem = default(CashOutRequestTradeSystem?), string accountId = default(string), string id = default(string), string assetId = default(string), string clientId = default(string), double? amount = default(double?), System.DateTime? dateTime = default(System.DateTime?), bool? isHidden = default(bool?))
        {
            PaymentSystem = paymentSystem;
            PaymentFields = paymentFields;
            BlockchainHash = blockchainHash;
            Status = status;
            State = state;
            TradeSystem = tradeSystem;
            AccountId = accountId;
            Id = id;
            AssetId = assetId;
            ClientId = clientId;
            Amount = amount;
            DateTime = dateTime;
            IsHidden = isHidden;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PaymentSystem")]
        public string PaymentSystem { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PaymentFields")]
        public string PaymentFields { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BlockchainHash")]
        public string BlockchainHash { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Pending', 'Confirmed', 'Declined',
        /// 'Processed', 'ClientConfirmation', 'CanceledByClient',
        /// 'CanceledByTimeout', 'RequestForDocs'
        /// </summary>
        [JsonProperty(PropertyName = "Status")]
        public CashOutRequestStatus? Status { get; private set; }

        /// <summary>
        /// Gets possible values include: 'InProcessOnchain', 'SettledOnchain',
        /// 'InProcessOffchain', 'SettledOffchain', 'SettledNoChain'
        /// </summary>
        [JsonProperty(PropertyName = "State")]
        public TransactionStates? State { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Spot', 'Margin'
        /// </summary>
        [JsonProperty(PropertyName = "TradeSystem")]
        public CashOutRequestTradeSystem? TradeSystem { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AccountId")]
        public string AccountId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AssetId")]
        public string AssetId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ClientId")]
        public string ClientId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Amount")]
        public double? Amount { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DateTime")]
        public System.DateTime? DateTime { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsHidden")]
        public bool? IsHidden { get; private set; }

    }
}
