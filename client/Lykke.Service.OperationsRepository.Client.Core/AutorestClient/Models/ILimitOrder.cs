// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.OperationsRepository.AutorestClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ILimitOrder
    {
        /// <summary>
        /// Initializes a new instance of the ILimitOrder class.
        /// </summary>
        public ILimitOrder()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ILimitOrder class.
        /// </summary>
        public ILimitOrder(string id, string clientId, System.DateTime createdAt, double volume, double price, string assetPairId, string status, bool straight, double remainingVolume, string matchingId)
        {
            Id = id;
            ClientId = clientId;
            CreatedAt = createdAt;
            Volume = volume;
            Price = price;
            AssetPairId = assetPairId;
            Status = status;
            Straight = straight;
            RemainingVolume = remainingVolume;
            MatchingId = matchingId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ClientId")]
        public string ClientId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CreatedAt")]
        public System.DateTime CreatedAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Volume")]
        public double Volume { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Price")]
        public double Price { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AssetPairId")]
        public string AssetPairId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Straight")]
        public bool Straight { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RemainingVolume")]
        public double RemainingVolume { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "MatchingId")]
        public string MatchingId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ClientId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ClientId");
            }
            if (AssetPairId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AssetPairId");
            }
            if (Status == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Status");
            }
            if (MatchingId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "MatchingId");
            }
        }
    }
}
