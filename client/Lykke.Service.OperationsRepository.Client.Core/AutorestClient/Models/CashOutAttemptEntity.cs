// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.Service.OperationsRepository.AutorestClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CashOutAttemptEntity
    {
        /// <summary>
        /// Initializes a new instance of the CashOutAttemptEntity class.
        /// </summary>
        public CashOutAttemptEntity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CashOutAttemptEntity class.
        /// </summary>
        /// <param name="status">Possible values include: 'Pending',
        /// 'Confirmed', 'Declined', 'Processed', 'ClientConfirmation',
        /// 'CanceledByClient', 'CanceledByTimeout', 'RequestForDocs'</param>
        /// <param name="state">Possible values include: 'InProcessOnchain',
        /// 'SettledOnchain', 'InProcessOffchain', 'SettledOffchain',
        /// 'SettledNoChain'</param>
        /// <param name="volumeSize">Possible values include: 'Unknown',
        /// 'High', 'Low'</param>
        public CashOutAttemptEntity(CashOutRequestStatus status, TransactionStates state, double amount, System.DateTime dateTime, bool isHidden, int statusVal, int stateVal, CashOutVolumeSize volumeSize, System.DateTime timestamp, string id = default(string), string clientId = default(string), string assetId = default(string), string paymentSystem = default(string), string paymentFields = default(string), string blockchainHash = default(string), string tradeSystem = default(string), string accountId = default(string), string volumeText = default(string), string previousId = default(string), string partitionKey = default(string), string rowKey = default(string), string eTag = default(string))
        {
            Id = id;
            ClientId = clientId;
            AssetId = assetId;
            PaymentSystem = paymentSystem;
            PaymentFields = paymentFields;
            BlockchainHash = blockchainHash;
            TradeSystem = tradeSystem;
            AccountId = accountId;
            Status = status;
            State = state;
            Amount = amount;
            DateTime = dateTime;
            IsHidden = isHidden;
            StatusVal = statusVal;
            StateVal = stateVal;
            VolumeSize = volumeSize;
            VolumeText = volumeText;
            PreviousId = previousId;
            PartitionKey = partitionKey;
            RowKey = rowKey;
            Timestamp = timestamp;
            ETag = eTag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public string Id { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ClientId")]
        public string ClientId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AssetId")]
        public string AssetId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PaymentSystem")]
        public string PaymentSystem { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PaymentFields")]
        public string PaymentFields { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BlockchainHash")]
        public string BlockchainHash { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TradeSystem")]
        public string TradeSystem { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AccountId")]
        public string AccountId { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Pending', 'Confirmed',
        /// 'Declined', 'Processed', 'ClientConfirmation', 'CanceledByClient',
        /// 'CanceledByTimeout', 'RequestForDocs'
        /// </summary>
        [JsonProperty(PropertyName = "Status")]
        public CashOutRequestStatus Status { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'InProcessOnchain',
        /// 'SettledOnchain', 'InProcessOffchain', 'SettledOffchain',
        /// 'SettledNoChain'
        /// </summary>
        [JsonProperty(PropertyName = "State")]
        public TransactionStates State { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Amount")]
        public double Amount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DateTime")]
        public System.DateTime DateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsHidden")]
        public bool IsHidden { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "StatusVal")]
        public int StatusVal { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "StateVal")]
        public int StateVal { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Unknown', 'High', 'Low'
        /// </summary>
        [JsonProperty(PropertyName = "VolumeSize")]
        public CashOutVolumeSize VolumeSize { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VolumeText")]
        public string VolumeText { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PreviousId")]
        public string PreviousId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PartitionKey")]
        public string PartitionKey { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RowKey")]
        public string RowKey { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Timestamp")]
        public System.DateTime Timestamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ETag")]
        public string ETag { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
